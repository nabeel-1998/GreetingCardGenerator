// <auto-generated />
using System;
using GreetingCardGenerator.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GreetingCardGenerator.Data.Migrations
{
    [DbContext(typeof(GreetingCardGeneratorDbContext))]
    partial class GreetingCardGeneratorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GreetingCardGenerator.Core.Admin", b =>
                {
                    b.Property<int>("ADMIN_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ADMIN_NAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EMAIL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PASSWORD_HASH")
                        .HasColumnType("int");

                    b.HasKey("ADMIN_ID");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("GreetingCardGenerator.Core.Greeting_Draft", b =>
                {
                    b.Property<int>("G_DRAFT_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CUSTOMER_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("D_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("GREETING_TEXT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NAME_INITS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("G_DRAFT_ID");

                    b.HasIndex("CUSTOMER_ID");

                    b.ToTable("GreetingDrafts");
                });

            modelBuilder.Entity("GreetingCardGenerator.Core.Greetings", b =>
                {
                    b.Property<int>("GREETING_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GREETING")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LETTER")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GREETING_ID");

                    b.ToTable("Greetings");
                });

            modelBuilder.Entity("GreetingCardGenerator.Core.Member", b =>
                {
                    b.Property<int>("USER_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EMAIL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PASSWORD_HASH")
                        .HasColumnType("int");

                    b.Property<string>("USER_NAME")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("USER_ID");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("GreetingCardGenerator.Core.Sales", b =>
                {
                    b.Property<int>("SALES_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AMOUNT")
                        .HasColumnType("int");

                    b.Property<string>("CARD_IMAGE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CUSTOMER_ID")
                        .HasColumnType("int");

                    b.Property<string>("GREETING_TEXT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NAME_INITS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TEMPLATE_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("T_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("SALES_ID");

                    b.HasIndex("CUSTOMER_ID");

                    b.HasIndex("TEMPLATE_ID");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("GreetingCardGenerator.Core.Template", b =>
                {
                    b.Property<int>("TEMPLATE_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IMAGE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OCCASSION")
                        .HasColumnType("int");

                    b.HasKey("TEMPLATE_ID");

                    b.ToTable("Templates");
                });

            modelBuilder.Entity("GreetingCardGenerator.Core.Template_Draft", b =>
                {
                    b.Property<int>("T_DRAFT_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CUSTOMER_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("D_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("GREETING_TEXT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NAME_INITS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TEMPLATE_ID")
                        .HasColumnType("int");

                    b.HasKey("T_DRAFT_ID");

                    b.HasIndex("CUSTOMER_ID");

                    b.HasIndex("TEMPLATE_ID");

                    b.ToTable("Template_Drafts");
                });

            modelBuilder.Entity("GreetingCardGenerator.Core.Greeting_Draft", b =>
                {
                    b.HasOne("GreetingCardGenerator.Core.Member", "Member")
                        .WithMany()
                        .HasForeignKey("CUSTOMER_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GreetingCardGenerator.Core.Sales", b =>
                {
                    b.HasOne("GreetingCardGenerator.Core.Member", "Member")
                        .WithMany()
                        .HasForeignKey("CUSTOMER_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GreetingCardGenerator.Core.Template", "Template")
                        .WithMany()
                        .HasForeignKey("TEMPLATE_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GreetingCardGenerator.Core.Template_Draft", b =>
                {
                    b.HasOne("GreetingCardGenerator.Core.Member", "Member")
                        .WithMany()
                        .HasForeignKey("CUSTOMER_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GreetingCardGenerator.Core.Template", "Template")
                        .WithMany()
                        .HasForeignKey("TEMPLATE_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
